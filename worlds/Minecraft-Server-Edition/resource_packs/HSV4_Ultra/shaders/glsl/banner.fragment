// __multiversion__
// This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.

#include "fragmentVersionCentroid.h"
#include "uniformShaderConstants.h"
#include "global_function.h"

LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;

#if __VERSION__ >= 300
_centroid varying vec4 uv;
#else
varying vec4 uv;
#endif

#ifdef ENABLE_FOG
varying vec4 fogColor;
#endif

#ifdef ENABLE_LIGHT
varying vec4 light;
#endif

varying highp vec3 worldpos;
varying highp vec3 position;

#ifndef DISABLE_TINTING
varying vec4 color;
#endif

void main()
{
	vec4 diffuse = texture2D(TEXTURE_0, uv.xy);
	vec4 base = texture2D(TEXTURE_0, uv.zw);

#ifndef DISABLE_TINTING
	base.a = mix(diffuse.r * diffuse.a, diffuse.a, color.a);
	base.rgb *= color.rgb;
#endif

#ifndef X_RAY_ENTITIES
#ifdef ENABLE_LIGHT
	base.rgb *= light.rgb;
#endif
#endif
#ifndef VANILLA

///// global variables
   vec3 normal = normalize(cross(dFdx(position), dFdy(position)));
   float far = clamp(length(worldpos / RENDER_DISTANCE * 3.), .0, 1.);
    bool end_ = end();
    bool underw = underwater();
    float lobby = float(FOG_CONTROL.x == 0.) * (1.-float(underw));

///// detection materials
     float day = timeset(1);
     float sun = timeset(4);
     float rain = timeset(3);
     float night = timeset(2);
     float looksun = timeset(5);
     float indoor = smoothstep(1., .8, FOG_COLOR.b);
     sun *= max(1.-night, 1.-indoor);
     rain *= 1.-lobby;

///// apply color
base.rgb = saturation(base.rgb, 1.25);
base.rgb = mix(base.rgb, tonemap(base.rgb, 1.), day);
base.rgb *= base_col(day, sun, night, rain);

///// other color
 if(end_){ base.rgb *= vec3(.5,.5,1.3);
      base.rgb -= mix(vec3(.0), vec3(.25), far);
} if(underw){
#ifdef WATER_WAVE
      base.rgb = mix(base.rgb, mix(vec3(.4, .5, .6), vec3(6.), max(0., get_wave(position*.1, TIME)) * base.rgb), FOG_COLOR.b-.2);
#else
      base.rgb *= vec3(.4, .5, .6);
#endif
          base.rgb += mix(vec3(.0), vec3(.05,.1,.2), far);
   }
   

// dirlight
   if(!end_){
   base.rgb *= mix(mix(1., mix(1., mix(.4, .65, max(0., rain)), abs(normal.x)), day), 1., far);}

   if(!(end_ || underw)){
     base.rgb = atmosphere(base.rgb+.05, worldpos, 1., day, sun, night, rain);
   }

#endif
#ifdef ENABLE_FOG
	//apply fog
	base.rgb = mix( base.rgb, fogColor.rgb, fogColor.a );
#endif

#ifdef UI_ENTITY
	base.a *= HUD_OPACITY;
#endif
	gl_FragColor = base;
}